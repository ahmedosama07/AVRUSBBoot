;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void main(void)
; 0000 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001E // Port C initialization
; 0000 001F // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
; 0000 0020 DDRC |= (1<<DDC0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0021 
; 0000 0022 while (1)
;PCODE: $00000010 VOL: 0
; 0000 0023 {
; 0000 0024 // Place your code here
; 0000 0025 PORTC.0 = 1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0026 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0027 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
